#!/bin/bash
# Helpers for common steps in cli system tests

KATELLO_URL=${KATELLO_URL:-"http://localhost:3000/katello/api/"}
PULP_URL=${PULP_URL:-"https://localhost/pulp/api/"}
CP_URL=${CP_URL:-"https://localhost:8443/candlepin/"}

function get_repo_id() {
    echo `$CMD repo list --org="$TEST_ORG" -g | grep $FEWUPS_REPO | awk '{print $1}'`
}

function get_pulp_repo_id() {
    echo `curl -k -s -u admin:admin -H "Content-Type: application/json" -H "Accept: application/json" \
    $KATELLO_URL/repositories/$REPO_ID/ | json_reformat | grep "pulp_id" | awk '{print $2}' | sed -e 's/[,"]//g'`
}

function get_repo_name() {
    echo `$CMD repo list --org="$TEST_ORG" -g | grep $FEWUPS_REPO | awk '{print $2}'`
}

function valid_id() {
    if [ -z "$1" ]; then
        return 0
    fi

    #id=`echo $1 | egrep '\+-+\+'`
    id=`echo $1 | egrep '\-{5,}'`
    if [ -z "$id" ]; then
        return 0
    else
        return 1
    fi
}

# create sample package group and category
# requires $REPO_ID, $PACKAGE_GROUP_ID, $PACKAGE_GROUP_CATEGORY_ID
function create_sample_package_groups() {
    PULP_REPO_ID=`get_pulp_repo_id`
    curl -k -u admin:admin  -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d \
        "{\"groupid\":\"$PACKAGE_GROUP_ID\",\"groupname\":\"$PACKAGE_GROUP_NAME\",\"description\":\"test description\"}" -s \
        $PULP_URL/repositories/$PULP_REPO_ID/create_packagegroup/ > /dev/null

    curl  -k -u admin:admin -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d \
        "{\"categoryid\":\"$PACKAGE_GROUP_CATEGORY_ID\",\"categoryname\":\"$PACKAGE_GROUP_CATEGORY_NAME\",\"description\":\"test description\"}" -s \
        $PULP_URL/repositories/$PULP_REPO_ID/create_packagegroupcategory/ > /dev/null

    curl -k -u admin:admin -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d \
        "{\"categoryid\":\"$PACKAGE_GROUP_CATEGORY_ID\",\"groupid\":\"$PACKAGE_GROUP_ID\"}" -s  \
        $PULP_URL/repositories/$PULP_REPO_ID/add_packagegroup_to_category/ > /dev/null
}

function jobs_running() {
    jobs_rake=`ps aux | grep -v grep | grep "rake jobs:work" > /dev/null; echo $?`
    jobs_service=`service katello-jobs status > /dev/null ; echo $?`

    if [ "$jobs_rake" == "0" ] || [ "$jobs_service" == "0" ]; then
        return 0
    else
        return 1
    fi
}
